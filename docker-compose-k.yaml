version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres-database
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - .misc/lib/postgresql/data:/var/lib/postgresql/data
      - .misc/keycloak/import/psql/keycloak:/docker-entrypoint-initdb.d
    networks: [backend_net]
    user: "0:0"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: keycloak
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - .misc/keycloak/import/realm:/opt/keycloak/data/import
    # ❌ no "ports:" here — not exposed to host
    networks: [backend_net]
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}

      # hostname locked to your domain
      KC_HOSTNAME: auth.giggle.global
      KC_HOSTNAME_URL: https://auth.giggle.global
      KC_HOSTNAME_ADMIN_URL: https://auth.giggle.global
      KC_HOSTNAME_STRICT: "true"
      KC_HOSTNAME_STRICT_HTTPS: "true"

      # behind reverse proxy (Nginx) terminating TLS
      KC_PROXY: edge
      KC_HTTP_ENABLED: "true"        # Keycloak listens HTTP :8080 internally
      # (Nginx will pass X-Forwarded-* headers)

      # admin bootstrap
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    command: >
      start
      --features=scripts,preview
      --import-realm
    user: "0:0"

networks:
  backend_net:
    name: backend_net
